#hasheqv((0 . #s(token op "#" |#| 1 0 1)) (1 . #s(token name "lang" lang 1 1 2)) (2 . #s(token whitespace " " " " 1 5 6)) (3 . #s(token name "lua" lua 1 6 7)) (4 . #s(token whitespace "\n\n" "\n\n" 1 9 10)) (5 . #s(token keyword "local" local 3 0 12)) (6 . #s(token whitespace " " " " 3 5 17)) (7 . #s(token keyword "function" function 3 6 18)) (8 . #s(token whitespace " " " " 3 14 26)) (9 . #s(token name "f" f 3 15 27)) (10 . #s(token lparen "(" "(" 3 16 28)) (11 . #s(token name "x" x 3 17 29)) (12 . #s(token rparen ")" ")" 3 18 30)) (13 . #s(token whitespace "\n    " "\n    " 3 19 31)) (14 . #s(token keyword "return" return 4 4 36)) (15 . #s(token whitespace " " " " 4 10 42)) (16 . #s(token name "x" x 4 11 43)) (17 . #s(token whitespace " " " " 4 12 44)) (18 . #s(token op "^" ^ 4 13 45)) (19 . #s(token whitespace " " " " 4 14 46)) (20 . #s(token number "2" 2 4 15 47)) (21 . #s(token whitespace "\n" "\n" 4 16 48)) (22 . #s(token keyword "end" end 5 0 49)) (23 . #s(token whitespace "\n\n" "\n\n" 5 3 52)) (24 . #s(token name "print" print 7 0 54)) (25 . #s(token lparen "(" "(" 7 5 59)) (26 . #s(token lparen "(" "(" 7 6 60)) (27 . #s(token keyword "nil" nil 7 7 61)) (28 . #s(token whitespace " " " " 7 10 64)) (29 . #s(token op "or" or 7 11 65)) (30 . #s(token whitespace " " " " 7 13 67)) (31 . #s(token name "f" f 7 14 68)) (32 . #s(token rparen ")" ")" 7 15 69)) (33 . #s(token lparen "(" "(" 7 16 70)) (34 . #s(token number "4" 4 7 17 71)) (35 . #s(token rparen ")" ")" 7 18 72)) (36 . #s(token rparen ")" ")" 7 19 73)) (37 . #s(token whitespace "\n\n" "\n\n" 7 20 74)) (38 . #s(token keyword "local" local 9 0 76)) (39 . #s(token whitespace " " " " 9 5 81)) (40 . #s(token name "o" o 9 6 82)) (41 . #s(token whitespace " " " " 9 7 83)) (42 . #s(token op "=" = 9 8 84)) (43 . #s(token whitespace " " " " 9 9 85)) (44 . #s(token lcubrace "{" "{" 9 10 86)) (45 . #s(token rcubrace "}" "}" 9 11 87)) (46 . #s(token whitespace "\n" "\n" 9 12 88)) (47 . #s(token keyword "function" function 10 0 89)) (48 . #s(token whitespace " " " " 10 8 97)) (49 . #s(token name "o" o 10 9 98)) (50 . #s(token colon ":" ":" 10 10 99)) (51 . #s(token name "ok" ok 10 11 100)) (52 . #s(token lparen "(" "(" 10 13 102)) (53 . #s(token name "v" v 10 14 103)) (54 . #s(token rparen ")" ")" 10 15 104)) (55 . #s(token whitespace "\n    " "\n    " 10 16 105)) (56 . #s(token keyword "return" return 11 4 110)) (57 . #s(token whitespace " " " " 11 10 116)) (58 . #s(token name "v" v 11 11 117)) (59 . #s(token whitespace " " " " 11 12 118)) (60 . #s(token op "==" == 11 13 119)) (61 . #s(token whitespace " " " " 11 15 121)) (62 . #s(token string "\"abc\"" #"abc" 11 16 122)) (63 . #s(token whitespace "\n" "\n" 11 21 127)) (64 . #s(token keyword "end" end 12 0 128)) (65 . #s(token whitespace "\n" "\n" 12 3 131)) (66 . #s(token name "print" print 13 0 132)) (67 . #s(token lparen "(" "(" 13 5 137)) (68 . #s(token lparen "(" "(" 13 6 138)) (69 . #s(token keyword "true" true 13 7 139)) (70 . #s(token whitespace " " " " 13 11 143)) (71 . #s(token op "and" and 13 12 144)) (72 . #s(token whitespace " " " " 13 15 147)) (73 . #s(token lparen "(" "(" 13 16 148)) (74 . #s(token keyword "nil" nil 13 17 149)) (75 . #s(token whitespace " " " " 13 20 152)) (76 . #s(token op "or" or 13 21 153)) (77 . #s(token whitespace " " " " 13 23 155)) (78 . #s(token name "o" o 13 24 156)) (79 . #s(token rparen ")" ")" 13 25 157)) (80 . #s(token colon ":" ":" 13 26 158)) (81 . #s(token name "ok" ok 13 27 159)) (82 . #s(token lparen "(" "(" 13 29 161)) (83 . #s(token string "\"abc\"" #"abc" 13 30 162)) (84 . #s(token rparen ")" ")" 13 35 167)) (85 . #s(token rparen ")" ")" 13 36 168)) (86 . #s(token rparen ")" ")" 13 37 169)) (87 . #s(token whitespace "\n" "\n" 13 38 170)) (88 . #s(token name "print" print 14 0 171)) (89 . #s(token lparen "(" "(" 14 5 176)) (90 . #s(token lparen "(" "(" 14 6 177)) (91 . #s(token keyword "true" true 14 7 178)) (92 . #s(token whitespace " " " " 14 11 182)) (93 . #s(token op "and" and 14 12 183)) (94 . #s(token whitespace " " " " 14 15 186)) (95 . #s(token lparen "(" "(" 14 16 187)) (96 . #s(token keyword "nil" nil 14 17 188)) (97 . #s(token whitespace " " " " 14 20 191)) (98 . #s(token op "or" or 14 21 192)) (99 . #s(token whitespace " " " " 14 23 194)) (100 . #s(token name "o" o 14 24 195)) (101 . #s(token rparen ")" ")" 14 25 196)) (102 . #s(token colon ":" ":" 14 26 197)) (103 . #s(token name "ok" ok 14 27 198)) (104 . #s(token lparen "(" "(" 14 29 200)) (105 . #s(token string "\"abc\"" #"abc" 14 30 201)) (106 . #s(token rparen ")" ")" 14 35 206)) (107 . #s(token rparen ")" ")" 14 36 207)) (108 . #s(token whitespace " " " " 14 37 208)) (109 . #s(token op "and" and 14 38 209)) (110 . #s(token whitespace " " " " 14 41 212)) (111 . #s(token keyword "false" false 14 42 213)) (112 . #s(token rparen ")" ")" 14 47 218)) (113 . #s(token whitespace "\n\n" "\n\n" 14 48 219)) (114 . #s(token keyword "local" local 16 0 221)) (115 . #s(token whitespace " " " " 16 5 226)) (116 . #s(token name "o" o 16 6 227)) (117 . #s(token whitespace " " " " 16 7 228)) (118 . #s(token op "=" = 16 8 229)) (119 . #s(token whitespace " " " " 16 9 230)) (120 . #s(token lcubrace "{" "{" 16 10 231)) (121 . #s(token rcubrace "}" "}" 16 11 232)) (122 . #s(token whitespace "\n" "\n" 16 12 233)) (123 . #s(token keyword "function" function 17 0 234)) (124 . #s(token whitespace " " " " 17 8 242)) (125 . #s(token name "o" o 17 9 243)) (126 . #s(token colon ":" ":" 17 10 244)) (127 . #s(token name "id" id 17 11 245)) (128 . #s(token lparen "(" "(" 17 13 247)) (129 . #s(token name "v" v 17 14 248)) (130 . #s(token comma "," "," 17 15 249)) (131 . #s(token whitespace " " " " 17 16 250)) (132 . #s(token dotdotdot "..." ... 17 17 251)) (133 . #s(token rparen ")" ")" 17 20 254)) (134 . #s(token whitespace "\n    " "\n    " 17 21 255)) (135 . #s(token keyword "if" if 18 4 260)) (136 . #s(token whitespace " " " " 18 6 262)) (137 . #s(token name "v" v 18 7 263)) (138 . #s(token whitespace " " " " 18 8 264)) (139 . #s(token op "~=" ~= 18 9 265)) (140 . #s(token whitespace " " " " 18 11 267)) (141 . #s(token keyword "nil" nil 18 12 268)) (142 . #s(token whitespace " " " " 18 15 271)) (143 . #s(token keyword "then" then 18 16 272)) (144 . #s(token whitespace "\n        " "\n        " 18 20 276)) (145 . #s(token keyword "return" return 19 8 285)) (146 . #s(token whitespace " " " " 19 14 291)) (147 . #s(token name "v" v 19 15 292)) (148 . #s(token comma "," "," 19 16 293)) (149 . #s(token whitespace " " " " 19 17 294)) (150 . #s(token name "o" o 19 18 295)) (151 . #s(token colon ":" ":" 19 19 296)) (152 . #s(token name "id" id 19 20 297)) (153 . #s(token lparen "(" "(" 19 22 299)) (154 . #s(token dotdotdot "..." ... 19 23 300)) (155 . #s(token rparen ")" ")" 19 26 303)) (156 . #s(token whitespace "\n    " "\n    " 19 27 304)) (157 . #s(token keyword "end" end 20 4 309)) (158 . #s(token whitespace "\n" "\n" 20 7 312)) (159 . #s(token keyword "end" end 21 0 313)) (160 . #s(token whitespace "\n" "\n" 21 3 316)) (161 . #s(token name "print" print 22 0 317)) (162 . #s(token lparen "(" "(" 22 5 322)) (163 . #s(token name "o" o 22 6 323)) (164 . #s(token colon ":" ":" 22 7 324)) (165 . #s(token name "id" id 22 8 325)) (166 . #s(token lparen "(" "(" 22 10 327)) (167 . #s(token number "1" 1 22 11 328)) (168 . #s(token comma "," "," 22 12 329)) (169 . #s(token whitespace " " " " 22 13 330)) (170 . #s(token lparen "(" "(" 22 14 331)) (171 . #s(token lparen "(" "(" 22 15 332)) (172 . #s(token name "o" o 22 16 333)) (173 . #s(token dot "." |.| 22 17 334)) (174 . #s(token name "id" id 22 18 335)) (175 . #s(token rparen ")" ")" 22 20 337)) (176 . #s(token lparen "(" "(" 22 21 338)) (177 . #s(token name "o" o 22 22 339)) (178 . #s(token rparen ")" ")" 22 23 340)) (179 . #s(token whitespace " " " " 22 24 341)) (180 . #s(token op "or" or 22 25 342)) (181 . #s(token whitespace " " " " 22 27 344)) (182 . #s(token keyword "true" true 22 28 345)) (183 . #s(token rparen ")" ")" 22 32 349)) (184 . #s(token rparen ")" ")" 22 33 350)) (185 . #s(token rparen ")" ")" 22 34 351)) (186 . #s(token whitespace "\n\n" "\n\n" 22 35 352)) (187 . #s(token name "print" print 24 0 354)) (188 . #s(token lparen "(" "(" 24 5 359)) (189 . #s(token whitespace "\n    " "\n    " 24 6 360)) (190 . #s(token lparen "(" "(" 25 4 365)) (191 . #s(token keyword "function" function 25 5 366)) (192 . #s(token lparen "(" "(" 25 13 374)) (193 . #s(token rparen ")" ")" 25 14 375)) (194 . #s(token whitespace " " " " 25 15 376)) (195 . #s(token keyword "return" return 25 16 377)) (196 . #s(token whitespace " " " " 25 22 383)) (197 . #s(token keyword "false" false 25 23 384)) (198 . #s(token whitespace " " " " 25 28 389)) (199 . #s(token keyword "end" end 25 29 390)) (200 . #s(token rparen ")" ")" 25 32 393)) (201 . #s(token lparen "(" "(" 25 33 394)) (202 . #s(token number "1" 1 25 34 395)) (203 . #s(token rparen ")" ")" 25 35 396)) (204 . #s(token whitespace " " " " 25 36 397)) (205 . #s(token op "or" or 25 37 398)) (206 . #s(token whitespace "\n    " "\n    " 25 39 400)) (207 . #s(token lparen "(" "(" 26 4 405)) (208 . #s(token keyword "function" function 26 5 406)) (209 . #s(token lparen "(" "(" 26 13 414)) (210 . #s(token name "x" x 26 14 415)) (211 . #s(token rparen ")" ")" 26 15 416)) (212 . #s(token whitespace " " " " 26 16 417)) (213 . #s(token keyword "return" return 26 17 418)) (214 . #s(token whitespace " " " " 26 23 424)) (215 . #s(token name "x" x 26 24 425)) (216 . #s(token whitespace " " " " 26 25 426)) (217 . #s(token op "==" == 26 26 427)) (218 . #s(token whitespace " " " " 26 28 429)) (219 . #s(token number "2" 2 26 29 430)) (220 . #s(token whitespace " " " " 26 30 431)) (221 . #s(token keyword "end" end 26 31 432)) (222 . #s(token rparen ")" ")" 26 34 435)) (223 . #s(token lparen "(" "(" 26 35 436)) (224 . #s(token number "2" 2 26 36 437)) (225 . #s(token rparen ")" ")" 26 37 438)) (226 . #s(token whitespace "\n" "\n" 26 38 439)) (227 . #s(token rparen ")" ")" 27 0 440)) (228 . #s(token whitespace "\n" "\n" 27 1 441)))