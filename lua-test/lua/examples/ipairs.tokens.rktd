#hasheqv((0 . #s(token op "#" |#| 1 0 1)) (1 . #s(token name "lang" lang 1 1 2)) (2 . #s(token whitespace " " " " 1 5 6)) (3 . #s(token name "lua" lua 1 6 7)) (4 . #s(token whitespace "\n\n" "\n\n" 1 9 10)) (5 . #s(token keyword "for" for 3 0 12)) (6 . #s(token whitespace " " " " 3 3 15)) (7 . #s(token name "idx" idx 3 4 16)) (8 . #s(token comma "," "," 3 7 19)) (9 . #s(token whitespace " " " " 3 8 20)) (10 . #s(token name "v" v 3 9 21)) (11 . #s(token whitespace " " " " 3 10 22)) (12 . #s(token keyword "in" in 3 11 23)) (13 . #s(token whitespace " " " " 3 13 25)) (14 . #s(token name "ipairs" ipairs 3 14 26)) (15 . #s(token lparen "(" "(" 3 20 32)) (16 . #s(token lcubrace "{" "{" 3 21 33)) (17 . #s(token number "1" 1 3 22 34)) (18 . #s(token comma "," "," 3 23 35)) (19 . #s(token whitespace " " " " 3 24 36)) (20 . #s(token number "2" 2 3 25 37)) (21 . #s(token comma "," "," 3 26 38)) (22 . #s(token whitespace " " " " 3 27 39)) (23 . #s(token number "3" 3 3 28 40)) (24 . #s(token comma "," "," 3 29 41)) (25 . #s(token whitespace " " " " 3 30 42)) (26 . #s(token number "4" 4 3 31 43)) (27 . #s(token rcubrace "}" "}" 3 32 44)) (28 . #s(token rparen ")" ")" 3 33 45)) (29 . #s(token whitespace " " " " 3 34 46)) (30 . #s(token keyword "do" do 3 35 47)) (31 . #s(token whitespace "\n    " "\n    " 3 37 49)) (32 . #s(token name "print" print 4 4 54)) (33 . #s(token lparen "(" "(" 4 9 59)) (34 . #s(token name "idx" idx 4 10 60)) (35 . #s(token comma "," "," 4 13 63)) (36 . #s(token whitespace " " " " 4 14 64)) (37 . #s(token name "v" v 4 15 65)) (38 . #s(token rparen ")" ")" 4 16 66)) (39 . #s(token whitespace "\n" "\n" 4 17 67)) (40 . #s(token keyword "end" end 5 0 68)) (41 . #s(token whitespace "\n\n" "\n\n" 5 3 71)) (42 . #s(token keyword "for" for 7 0 73)) (43 . #s(token whitespace " " " " 7 3 76)) (44 . #s(token name "idx" idx 7 4 77)) (45 . #s(token comma "," "," 7 7 80)) (46 . #s(token whitespace " " " " 7 8 81)) (47 . #s(token name "v" v 7 9 82)) (48 . #s(token whitespace " " " " 7 10 83)) (49 . #s(token keyword "in" in 7 11 84)) (50 . #s(token whitespace " " " " 7 13 86)) (51 . #s(token name "ipairs" ipairs 7 14 87)) (52 . #s(token lparen "(" "(" 7 20 93)) (53 . #s(token lcubrace "{" "{" 7 21 94)) (54 . #s(token name "a" a 7 22 95)) (55 . #s(token whitespace " " " " 7 23 96)) (56 . #s(token op "=" = 7 24 97)) (57 . #s(token whitespace " " " " 7 25 98)) (58 . #s(token number "1" 1 7 26 99)) (59 . #s(token comma "," "," 7 27 100)) (60 . #s(token whitespace " " " " 7 28 101)) (61 . #s(token name "b" b 7 29 102)) (62 . #s(token whitespace " " " " 7 30 103)) (63 . #s(token op "=" = 7 31 104)) (64 . #s(token whitespace " " " " 7 32 105)) (65 . #s(token number "2" 2 7 33 106)) (66 . #s(token rcubrace "}" "}" 7 34 107)) (67 . #s(token rparen ")" ")" 7 35 108)) (68 . #s(token whitespace " " " " 7 36 109)) (69 . #s(token keyword "do" do 7 37 110)) (70 . #s(token whitespace "\n    " "\n    " 7 39 112)) (71 . #s(token name "print" print 8 4 117)) (72 . #s(token lparen "(" "(" 8 9 122)) (73 . #s(token string "\"fail\"" #"fail" 8 10 123)) (74 . #s(token rparen ")" ")" 8 16 129)) (75 . #s(token whitespace "\n" "\n" 8 17 130)) (76 . #s(token keyword "end" end 9 0 131)) (77 . #s(token whitespace "\n\n" "\n\n" 9 3 134)) (78 . #s(token keyword "for" for 11 0 136)) (79 . #s(token whitespace " " " " 11 3 139)) (80 . #s(token name "idx" idx 11 4 140)) (81 . #s(token comma "," "," 11 7 143)) (82 . #s(token whitespace " " " " 11 8 144)) (83 . #s(token name "v" v 11 9 145)) (84 . #s(token whitespace " " " " 11 10 146)) (85 . #s(token keyword "in" in 11 11 147)) (86 . #s(token whitespace " " " " 11 13 149)) (87 . #s(token name "ipairs" ipairs 11 14 150)) (88 . #s(token lparen "(" "(" 11 20 156)) (89 . #s(token lcubrace "{" "{" 11 21 157)) (90 . #s(token number "1" 1 11 22 158)) (91 . #s(token comma "," "," 11 23 159)) (92 . #s(token whitespace " " " " 11 24 160)) (93 . #s(token number "2" 2 11 25 161)) (94 . #s(token comma "," "," 11 26 162)) (95 . #s(token whitespace " " " " 11 27 163)) (96 . #s(token number "3" 3 11 28 164)) (97 . #s(token comma "," "," 11 29 165)) (98 . #s(token whitespace " " " " 11 30 166)) (99 . #s(token lsqbrace "[" "[" 11 31 167)) (100 . #s(token number "5" 5 11 32 168)) (101 . #s(token rsqbrace "]" "]" 11 33 169)) (102 . #s(token whitespace " " " " 11 34 170)) (103 . #s(token op "=" = 11 35 171)) (104 . #s(token whitespace " " " " 11 36 172)) (105 . #s(token number "5" 5 11 37 173)) (106 . #s(token comma "," "," 11 38 174)) (107 . #s(token whitespace " " " " 11 39 175)) (108 . #s(token name "a" a 11 40 176)) (109 . #s(token whitespace " " " " 11 41 177)) (110 . #s(token op "=" = 11 42 178)) (111 . #s(token whitespace " " " " 11 43 179)) (112 . #s(token number "6" 6 11 44 180)) (113 . #s(token rcubrace "}" "}" 11 45 181)) (114 . #s(token rparen ")" ")" 11 46 182)) (115 . #s(token whitespace " " " " 11 47 183)) (116 . #s(token keyword "do" do 11 48 184)) (117 . #s(token whitespace "\n    " "\n    " 11 50 186)) (118 . #s(token name "print" print 12 4 191)) (119 . #s(token lparen "(" "(" 12 9 196)) (120 . #s(token name "idx" idx 12 10 197)) (121 . #s(token comma "," "," 12 13 200)) (122 . #s(token whitespace " " " " 12 14 201)) (123 . #s(token name "v" v 12 15 202)) (124 . #s(token rparen ")" ")" 12 16 203)) (125 . #s(token whitespace "\n" "\n" 12 17 204)) (126 . #s(token keyword "end" end 13 0 205)) (127 . #s(token whitespace "\n\n" "\n\n" 13 3 208)) (128 . #s(token name "s" s 15 0 210)) (129 . #s(token whitespace " " " " 15 1 211)) (130 . #s(token op "=" = 15 2 212)) (131 . #s(token whitespace " " " " 15 3 213)) (132 . #s(token lcubrace "{" "{" 15 4 214)) (133 . #s(token number "1" 1 15 5 215)) (134 . #s(token comma "," "," 15 6 216)) (135 . #s(token whitespace " " " " 15 7 217)) (136 . #s(token number "2" 2 15 8 218)) (137 . #s(token comma "," "," 15 9 219)) (138 . #s(token whitespace " " " " 15 10 220)) (139 . #s(token number "3" 3 15 11 221)) (140 . #s(token rcubrace "}" "}" 15 12 222)) (141 . #s(token whitespace "\n" "\n" 15 13 223)) (142 . #s(token name "t" t 16 0 224)) (143 . #s(token whitespace " " " " 16 1 225)) (144 . #s(token op "=" = 16 2 226)) (145 . #s(token whitespace " " " " 16 3 227)) (146 . #s(token lcubrace "{" "{" 16 4 228)) (147 . #s(token rcubrace "}" "}" 16 5 229)) (148 . #s(token whitespace "\n" "\n" 16 6 230)) (149 . #s(token name "setmetatable" setmetatable 17 0 231)) (150 . #s(token lparen "(" "(" 17 12 243)) (151 . #s(token name "t" t 17 13 244)) (152 . #s(token comma "," "," 17 14 245)) (153 . #s(token whitespace " " " " 17 15 246)) (154 . #s(token name "s" s 17 16 247)) (155 . #s(token rparen ")" ")" 17 17 248)) (156 . #s(token whitespace "\n" "\n" 17 18 249)) (157 . #s(token name "s" s 18 0 250)) (158 . #s(token dot "." |.| 18 1 251)) (159 . #s(token name "__index" __index 18 2 252)) (160 . #s(token whitespace " " " " 18 9 259)) (161 . #s(token op "=" = 18 10 260)) (162 . #s(token whitespace " " " " 18 11 261)) (163 . #s(token name "s" s 18 12 262)) (164 . #s(token whitespace "\n" "\n" 18 13 263)) (165 . #s(token keyword "for" for 19 0 264)) (166 . #s(token whitespace " " " " 19 3 267)) (167 . #s(token name "idx" idx 19 4 268)) (168 . #s(token comma "," "," 19 7 271)) (169 . #s(token whitespace " " " " 19 8 272)) (170 . #s(token name "v" v 19 9 273)) (171 . #s(token whitespace " " " " 19 10 274)) (172 . #s(token keyword "in" in 19 11 275)) (173 . #s(token whitespace " " " " 19 13 277)) (174 . #s(token name "ipairs" ipairs 19 14 278)) (175 . #s(token lparen "(" "(" 19 20 284)) (176 . #s(token name "t" t 19 21 285)) (177 . #s(token rparen ")" ")" 19 22 286)) (178 . #s(token whitespace " " " " 19 23 287)) (179 . #s(token keyword "do" do 19 24 288)) (180 . #s(token whitespace "\n  " "\n  " 19 26 290)) (181 . #s(token name "print" print 20 2 293)) (182 . #s(token lparen "(" "(" 20 7 298)) (183 . #s(token name "idx" idx 20 8 299)) (184 . #s(token comma "," "," 20 11 302)) (185 . #s(token whitespace " " " " 20 12 303)) (186 . #s(token name "v" v 20 13 304)) (187 . #s(token rparen ")" ")" 20 14 305)) (188 . #s(token whitespace "\n" "\n" 20 15 306)) (189 . #s(token keyword "end" end 21 0 307)) (190 . #s(token whitespace "\n" "\n" 21 3 310)))